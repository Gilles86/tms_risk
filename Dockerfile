# Generated by Neurodocker and Reproenv.

FROM ubuntu
ENV OS="Linux" \
    PATH="/opt/freesurfer-6.0.1/bin:/opt/freesurfer-6.0.1/fsfast/bin:/opt/freesurfer-6.0.1/tktools:/opt/freesurfer-6.0.1/mni/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" \
    FREESURFER_HOME="/opt/freesurfer-6.0.1" \
    FREESURFER="/opt/freesurfer-6.0.1" \
    SUBJECTS_DIR="/opt/freesurfer-6.0.1/subjects" \
    LOCAL_DIR="/opt/freesurfer-6.0.1/local" \
    FSFAST_HOME="/opt/freesurfer-6.0.1/fsfast" \
    FMRI_ANALYSIS_DIR="/opt/freesurfer-6.0.1/fsfast" \
    FUNCTIONALS_DIR="/opt/freesurfer-6.0.1/sessions" \
    FS_OVERRIDE="0" \
    FIX_VERTEX_AREA="" \
    FSF_OUTPUT_FORMAT="nii.gz# mni env requirements" \
    MINC_BIN_DIR="/opt/freesurfer-6.0.1/mni/bin" \
    MINC_LIB_DIR="/opt/freesurfer-6.0.1/mni/lib" \
    MNI_DIR="/opt/freesurfer-6.0.1/mni" \
    MNI_DATAPATH="/opt/freesurfer-6.0.1/mni/data" \
    MNI_PERL5LIB="/opt/freesurfer-6.0.1/mni/share/perl5" \
    PERL5LIB="/opt/freesurfer-6.0.1/mni/share/perl5"
RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           bc \
           ca-certificates \
           curl \
           libgomp1 \
           libxmu6 \
           libxt6 \
           perl \
           tcsh \
    && rm -rf /var/lib/apt/lists/* \
    && echo "Downloading FreeSurfer ..." \
    && mkdir -p /opt/freesurfer-6.0.1 \
    && curl -fL ftp://surfer.nmr.mgh.harvard.edu/pub/dist/freesurfer/6.0.1/freesurfer-Linux-centos6_x86_64-stable-pub-v6.0.1.tar.gz \
    | tar -xz -C /opt/freesurfer-6.0.1 --owner root --group root --no-same-owner --strip-components 1 \
         --exclude='average/mult-comp-cor' \
         --exclude='lib/cuda' \
         --exclude='lib/qt' \
         --exclude='subjects/V1_average' \
         --exclude='subjects/bert' \
         --exclude='subjects/cvs_avg35' \
         --exclude='subjects/cvs_avg35_inMNI152' \
         --exclude='subjects/fsaverage3' \
         --exclude='subjects/fsaverage4' \
         --exclude='subjects/fsaverage5' \
         --exclude='subjects/fsaverage6' \
         --exclude='subjects/fsaverage_sym' \
         --exclude='trctrain'
ENV FSLDIR="/opt/fsl-6.0.1" \
    PATH="/opt/fsl-6.0.1/bin:$PATH" \
    FSLOUTPUTTYPE="NIFTI_GZ" \
    FSLMULTIFILEQUIT="TRUE" \
    FSLTCLSH="/opt/fsl-6.0.1/bin/fsltclsh" \
    FSLWISH="/opt/fsl-6.0.1/bin/fslwish" \
    FSLLOCKDIR="" \
    FSLMACHINELIST="" \
    FSLREMOTECALL="" \
    FSLGECUDAQ="cuda.q"
RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           bc \
           ca-certificates \
           curl \
           dc \
           file \
           libfontconfig1 \
           libfreetype6 \
           libgl1-mesa-dev \
           libgl1-mesa-dri \
           libglu1-mesa-dev \
           libgomp1 \
           libice6 \
           libopenblas-base \
           libxcursor1 \
           libxft2 \
           libxinerama1 \
           libxrandr2 \
           libxrender1 \
           libxt6 \
           nano \
           sudo \
           wget \
    && rm -rf /var/lib/apt/lists/* \
    && echo "Downloading FSL ..." \
    && mkdir -p /opt/fsl-6.0.1 \
    && curl -fL https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-6.0.1-centos6_64.tar.gz \
    | tar -xz -C /opt/fsl-6.0.1 --strip-components 1 \
    && echo "Installing FSL conda environment ..." \
    && bash /opt/fsl-6.0.1/etc/fslconf/fslpython_install.sh -f /opt/fsl-6.0.1 \
    && echo "Downgrading deprecation module per https://github.com/kaczmarj/neurodocker/issues/271#issuecomment-514523420" \
    && /opt/fsl-6.0.1/fslpython/bin/conda install -n fslpython -c conda-forge -y deprecation==1.* \
    && echo "Removing bundled with FSLeyes libz likely incompatible with the one from OS" \
    && rm -f /opt/fsl-6.0.1/bin/FSLeyes/libz.so.1
ENV ANTSPATH="/opt/ants-2.3.4/" \
    PATH="/opt/ants-2.3.4:$PATH"
RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           ca-certificates \
           curl \
    && rm -rf /var/lib/apt/lists/* \
    && echo "Downloading ANTs ..." \
    && mkdir -p /opt/ants-2.3.4 \
    && curl -fsSL https://dl.dropbox.com/s/gwf51ykkk5bifyj/ants-Linux-centos6_x86_64-v2.3.4.tar.gz \
    | tar -xz -C /opt/ants-2.3.4 --strip-components 1
RUN apt-get update -qq \
           && apt-get install -y -q --no-install-recommends \
                  build-essential \
                  git \
                  wget \
                  zsh \
           && rm -rf /var/lib/apt/lists/*
ENV CONDA_DIR="/opt/miniconda-latest" \
    PATH="/opt/miniconda-latest/bin:$PATH"
RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           bzip2 \
           ca-certificates \
           curl \
    && rm -rf /var/lib/apt/lists/* \
    # Install dependencies.
    && export PATH="/opt/miniconda-latest/bin:$PATH" \
    && echo "Downloading Miniconda installer ..." \
    && conda_installer="/tmp/miniconda.sh" \
    && curl -fsSL -o "$conda_installer" https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \
    && bash "$conda_installer" -b -p /opt/miniconda-latest \
    && rm -f "$conda_installer" \
    && conda update -yq -nbase conda \
    # Prefer packages in conda-forge
    && conda config --system --prepend channels conda-forge \
    # Packages in lower-priority channels not considered if a package with the same
    # name exists in a higher priority channel. Can dramatically speed up installations.
    # Conda recommends this as a default
    # https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-channels.html
    && conda config --set channel_priority strict \
    && conda config --system --set auto_update_conda false \
    && conda config --system --set show_channel_urls true \
    # Enable `conda activate`
    && conda init bash \
    && conda create -y  --name neuro \
    && conda install -y  --name neuro \
           "python=3.7" \
           "pandas" \
           "matplotlib" \
           "scikit-learn" \
           "seaborn" \
           "ipython" \
           "pytables" \
           "tensorflow" \
           "tensorflow-probability" \
           "pingouin" \
           "mkl-service" \
    && bash -c "source activate neuro \
    &&   python -m pip install --no-cache-dir  \
             "nilearn" \
             "nipype" \
             "pybids" \
             "nistats" \
             "tensorflow_probability" \
             "https://github.com/Gilles86/hedfpy/archive/refactor_gilles.zip" \
             "pytest" \
             "neuropythy" \
             "bambi" \
             "pymc3" \
             "svgutils==0.3.1"" \
    # Clean up
    && sync && conda clean --all --yes && sync \
    && rm -rf ~/.cache/pip/*
RUN wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh || true
RUN conda init zsh
RUN echo "conda activate neuro" >> ~/.zshrc && conda init
WORKDIR /tms_risk
COPY ["braincoder", \
      "/braincoder"]
RUN bash -c 'source activate neuro && cd /braincoder && python setup.py develop'
COPY ["tms_risk", \
      "/tms_risk"]
COPY ["setup.py", \
      "/setup.py"]
RUN bash -c 'source activate neuro && cd / && python setup.py develop'

